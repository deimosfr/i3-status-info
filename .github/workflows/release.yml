name: release

on:
  create:
    ref_type: tag
    ref: "v*"

jobs:
  build-release-artifacts:
    name: Build artifact
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - artifact: linux-x86_64
            os: ubuntu-20.04
            toolchain-suffix: x86_64-unknown-linux-gnu
            bin-file-name: i3-status-info
            target: x86_64-unknown-linux-gnu
            use-cross: false
            profile: release
            features: ""
          - artifact: linux-aarch64
            os: ubuntu-22.04
            toolchain-suffix: x86_64-unknown-linux-gnu
            bin-file-name: i3-status-info
            target: aarch64-unknown-linux-gnu
            use-cross: true
            profile: release
            features: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_PLAYTIME_CLIP_ENGINE_DEPLOY_KEY }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.71.1-${{ matrix.toolchain-suffix }}
          target: ${{ matrix.target }}
          override: true
      - name: Install native Linux dependencies
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install nasm binutils-arm-linux-gnueabihf binutils-aarch64-linux-gnu
      - name: cargo test
        if: matrix.use-cross == true
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features "${{ matrix.features }}"
      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features "${{ matrix.features }}" --profile ${{ matrix.profile }} --target ${{ matrix.target }}
          use-cross: ${{ matrix.use-cross }}
      - name: Upload binaries to artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: target/${{ matrix.target }}/${{ matrix.profile }}/${{ matrix.bin-file-name }}

  create-release:
    name: Publish release
    needs: build-release-artifacts
    runs-on: ubuntu-22.04
    steps:
      - name: Get tag name
        id: get_tag_name
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF/refs\/tags\//}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
          release_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
          draft: true
          prerelease: ${{ contains(github.ref, 'pre') }}
      - name: Download artifacts from build job
        uses: actions/download-artifact@v2
      - name: Upload linux-x86_64 release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-x86_64/i3-status-info
          asset_name: i3-status-info_linux_amd64
          asset_content_type: application/octet-stream
      - name: Upload linux-aarch64 release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-aarch64/i3-status-info
          asset_name: i3-status-info_linux_aarch64
          asset_content_type: application/octet-stream
